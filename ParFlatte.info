-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ParFlatte.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> FDec                                    (4)
	FDec -> Type Ident '(' ListArg ')' ':=' Block      (5)
	Dec -> FDec                                        (6)
	Dec -> Type Ident                                  (7)
	Dec -> Type Ident ':=' Expr                        (8)
	Arg -> Ident ':' Type                              (9)
	Arg -> Ident ':&' Type                             (10)
	ListArg ->                                         (11)
	ListArg -> Arg                                     (12)
	ListArg -> Arg ',' ListArg                         (13)
	Block -> '{' ListStmt '}'                          (14)
	ListStmt ->                                        (15)
	ListStmt -> Stmt ListStmt                          (16)
	Stmt -> Dec ';'                                    (17)
	Stmt -> Ident ':=' Expr ';'                        (18)
	Stmt -> Ident '++' ';'                             (19)
	Stmt -> Ident '--' ';'                             (20)
	Stmt -> 'return' Expr ';'                          (21)
	Stmt -> 'if' '(' Expr ')' Block                    (22)
	Stmt -> 'if' '(' Expr ')' Block 'else' Block       (23)
	Stmt -> 'while' '(' Expr ')' Block                 (24)
	Stmt -> 'break' ';'                                (25)
	Stmt -> 'continue' ';'                             (26)
	Stmt -> Expr ';'                                   (27)
	Type -> 'int'                                      (28)
	Type -> 'str'                                      (29)
	Type -> 'bool'                                     (30)
	Type -> '[' ListType ']'                           (31)
	ListType -> Type                                   (32)
	ListType -> Type ',' ListType                      (33)
	Expr6 -> Ident                                     (34)
	Expr6 -> Integer                                   (35)
	Expr6 -> String                                    (36)
	Expr6 -> Tuple                                     (37)
	Expr6 -> Expr6 '^' Integer                         (38)
	Expr6 -> 'true'                                    (39)
	Expr6 -> 'false'                                   (40)
	Expr6 -> 'maybe'                                   (41)
	Expr6 -> Ident '(' ListExpr ')'                    (42)
	Expr6 -> '(' Expr ')'                              (43)
	Tuple -> '[' ListExpr ']'                          (44)
	Expr5 -> '-' Expr6                                 (45)
	Expr5 -> '!' Expr6                                 (46)
	Expr5 -> Expr6                                     (47)
	Expr4 -> Expr4 MulOp Expr5                         (48)
	Expr4 -> Expr5                                     (49)
	Expr3 -> Expr3 AddOp Expr4                         (50)
	Expr3 -> Expr4                                     (51)
	Expr2 -> Expr2 CompOp Expr3                        (52)
	Expr2 -> Expr3                                     (53)
	Expr1 -> Expr2 '&&' Expr1                          (54)
	Expr1 -> Expr2                                     (55)
	Expr -> Expr1 '||' Expr                            (56)
	Expr -> Expr1                                      (57)
	ListExpr ->                                        (58)
	ListExpr -> Expr                                   (59)
	ListExpr -> Expr ',' ListExpr                      (60)
	AddOp -> '+'                                       (61)
	AddOp -> '-'                                       (62)
	MulOp -> '*'                                       (63)
	MulOp -> '/'                                       (64)
	MulOp -> '%'                                       (65)
	CompOp -> '<'                                      (66)
	CompOp -> '<='                                     (67)
	CompOp -> '>'                                      (68)
	CompOp -> '>='                                     (69)
	CompOp -> '=='                                     (70)
	CompOp -> '!='                                     (71)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'--'           { PT _ (TS _ 12) }
	'/'            { PT _ (TS _ 13) }
	':'            { PT _ (TS _ 14) }
	':&'           { PT _ (TS _ 15) }
	':='           { PT _ (TS _ 16) }
	';'            { PT _ (TS _ 17) }
	'<'            { PT _ (TS _ 18) }
	'<='           { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'>'            { PT _ (TS _ 21) }
	'>='           { PT _ (TS _ 22) }
	'['            { PT _ (TS _ 23) }
	']'            { PT _ (TS _ 24) }
	'^'            { PT _ (TS _ 25) }
	'bool'         { PT _ (TS _ 26) }
	'break'        { PT _ (TS _ 27) }
	'continue'     { PT _ (TS _ 28) }
	'else'         { PT _ (TS _ 29) }
	'false'        { PT _ (TS _ 30) }
	'if'           { PT _ (TS _ 31) }
	'int'          { PT _ (TS _ 32) }
	'maybe'        { PT _ (TS _ 33) }
	'return'       { PT _ (TS _ 34) }
	'str'          { PT _ (TS _ 35) }
	'true'         { PT _ (TS _ 36) }
	'while'        { PT _ (TS _ 37) }
	'{'            { PT _ (TS _ 38) }
	'||'           { PT _ (TS _ 39) }
	'}'            { PT _ (TS _ 40) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	FDec            rule  5
	Dec             rules 6, 7, 8
	Arg             rules 9, 10
	ListArg         rules 11, 12, 13
	Block           rule  14
	ListStmt        rules 15, 16
	Stmt            rules 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27
	Type            rules 28, 29, 30, 31
	ListType        rules 32, 33
	Expr6           rules 34, 35, 36, 37, 38, 39, 40, 41, 42, 43
	Tuple           rule  44
	Expr5           rules 45, 46, 47
	Expr4           rules 48, 49
	Expr3           rules 50, 51
	Expr2           rules 52, 53
	Expr1           rules 54, 55
	Expr            rules 56, 57
	ListExpr        rules 58, 59, 60
	AddOp           rules 61, 62
	MulOp           rules 63, 64, 65
	CompOp          rules 66, 67, 68, 69, 70, 71

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'['            shift, and enter state 6
	'bool'         shift, and enter state 7
	'int'          shift, and enter state 8
	'str'          shift, and enter state 9

	Program        goto state 3
	FDec           goto state 4
	Type           goto state 5

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	':&'           reduce using rule 1
	':='           reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	']'            reduce using rule 1
	'^'            reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 4

	Program -> FDec .                                   (rule 4)

	%eof           reduce using rule 4


State 5

	FDec -> Type . Ident '(' ListArg ')' ':=' Block     (rule 5)

	L_Ident        shift, and enter state 2

	Ident          goto state 12

State 6

	Type -> '[' . ListType ']'                          (rule 31)

	'['            shift, and enter state 6
	'bool'         shift, and enter state 7
	'int'          shift, and enter state 8
	'str'          shift, and enter state 9

	Type           goto state 10
	ListType       goto state 11

State 7

	Type -> 'bool' .                                    (rule 30)

	')'            reduce using rule 30
	','            reduce using rule 30
	']'            reduce using rule 30
	L_Ident        reduce using rule 30


State 8

	Type -> 'int' .                                     (rule 28)

	')'            reduce using rule 28
	','            reduce using rule 28
	']'            reduce using rule 28
	L_Ident        reduce using rule 28


State 9

	Type -> 'str' .                                     (rule 29)

	')'            reduce using rule 29
	','            reduce using rule 29
	']'            reduce using rule 29
	L_Ident        reduce using rule 29


State 10

	ListType -> Type .                                  (rule 32)
	ListType -> Type . ',' ListType                     (rule 33)

	','            shift, and enter state 15
	']'            reduce using rule 32


State 11

	Type -> '[' ListType . ']'                          (rule 31)

	']'            shift, and enter state 14


State 12

	FDec -> Type Ident . '(' ListArg ')' ':=' Block     (rule 5)

	'('            shift, and enter state 13


State 13

	FDec -> Type Ident '(' . ListArg ')' ':=' Block     (rule 5)

	')'            reduce using rule 11
	L_Ident        shift, and enter state 2

	Ident          goto state 17
	Arg            goto state 18
	ListArg        goto state 19

State 14

	Type -> '[' ListType ']' .                          (rule 31)

	')'            reduce using rule 31
	','            reduce using rule 31
	']'            reduce using rule 31
	L_Ident        reduce using rule 31


State 15

	ListType -> Type ',' . ListType                     (rule 33)

	'['            shift, and enter state 6
	'bool'         shift, and enter state 7
	'int'          shift, and enter state 8
	'str'          shift, and enter state 9

	Type           goto state 10
	ListType       goto state 16

State 16

	ListType -> Type ',' ListType .                     (rule 33)

	']'            reduce using rule 33


State 17

	Arg -> Ident . ':' Type                             (rule 9)
	Arg -> Ident . ':&' Type                            (rule 10)

	':'            shift, and enter state 22
	':&'           shift, and enter state 23


State 18

	ListArg -> Arg .                                    (rule 12)
	ListArg -> Arg . ',' ListArg                        (rule 13)

	')'            reduce using rule 12
	','            shift, and enter state 21


State 19

	FDec -> Type Ident '(' ListArg . ')' ':=' Block     (rule 5)

	')'            shift, and enter state 20


State 20

	FDec -> Type Ident '(' ListArg ')' . ':=' Block     (rule 5)

	':='           shift, and enter state 27


State 21

	ListArg -> Arg ',' . ListArg                        (rule 13)

	')'            reduce using rule 11
	L_Ident        shift, and enter state 2

	Ident          goto state 17
	Arg            goto state 18
	ListArg        goto state 26

State 22

	Arg -> Ident ':' . Type                             (rule 9)

	'['            shift, and enter state 6
	'bool'         shift, and enter state 7
	'int'          shift, and enter state 8
	'str'          shift, and enter state 9

	Type           goto state 25

State 23

	Arg -> Ident ':&' . Type                            (rule 10)

	'['            shift, and enter state 6
	'bool'         shift, and enter state 7
	'int'          shift, and enter state 8
	'str'          shift, and enter state 9

	Type           goto state 24

State 24

	Arg -> Ident ':&' Type .                            (rule 10)

	')'            reduce using rule 10
	','            reduce using rule 10


State 25

	Arg -> Ident ':' Type .                             (rule 9)

	')'            reduce using rule 9
	','            reduce using rule 9


State 26

	ListArg -> Arg ',' ListArg .                        (rule 13)

	')'            reduce using rule 13


State 27

	FDec -> Type Ident '(' ListArg ')' ':=' . Block     (rule 5)

	'{'            shift, and enter state 29

	Block          goto state 28

State 28

	FDec -> Type Ident '(' ListArg ')' ':=' Block .     (rule 5)

	';'            reduce using rule 5
	%eof           reduce using rule 5


State 29

	Block -> '{' . ListStmt '}'                         (rule 14)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'['            shift, and enter state 49
	'bool'         shift, and enter state 7
	'break'        shift, and enter state 50
	'continue'     shift, and enter state 51
	'false'        shift, and enter state 52
	'if'           shift, and enter state 53
	'int'          shift, and enter state 8
	'maybe'        shift, and enter state 54
	'return'       shift, and enter state 55
	'str'          shift, and enter state 9
	'true'         shift, and enter state 56
	'while'        shift, and enter state 57
	'}'            reduce using rule 15
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 58
	L_quoted       shift, and enter state 59

	Ident          goto state 30
	Integer        goto state 31
	String         goto state 32
	FDec           goto state 33
	Dec            goto state 34
	ListStmt       goto state 35
	Stmt           goto state 36
	Type           goto state 37
	Expr6          goto state 38
	Tuple          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 45

State 30

	Stmt -> Ident . ':=' Expr ';'                       (rule 18)
	Stmt -> Ident . '++' ';'                            (rule 19)
	Stmt -> Ident . '--' ';'                            (rule 20)
	Expr6 -> Ident .                                    (rule 34)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 42)

	'!='           reduce using rule 34
	'%'            reduce using rule 34
	'&&'           reduce using rule 34
	'('            shift, and enter state 94
	'*'            reduce using rule 34
	'+'            reduce using rule 34
	'++'           shift, and enter state 95
	'-'            reduce using rule 34
	'--'           shift, and enter state 96
	'/'            reduce using rule 34
	':='           shift, and enter state 97
	';'            reduce using rule 34
	'<'            reduce using rule 34
	'<='           reduce using rule 34
	'=='           reduce using rule 34
	'>'            reduce using rule 34
	'>='           reduce using rule 34
	'^'            reduce using rule 34
	'||'           reduce using rule 34


State 31

	Expr6 -> Integer .                                  (rule 35)

	'!='           reduce using rule 35
	'%'            reduce using rule 35
	'&&'           reduce using rule 35
	')'            reduce using rule 35
	'*'            reduce using rule 35
	'+'            reduce using rule 35
	','            reduce using rule 35
	'-'            reduce using rule 35
	'/'            reduce using rule 35
	';'            reduce using rule 35
	'<'            reduce using rule 35
	'<='           reduce using rule 35
	'=='           reduce using rule 35
	'>'            reduce using rule 35
	'>='           reduce using rule 35
	']'            reduce using rule 35
	'^'            reduce using rule 35
	'||'           reduce using rule 35


State 32

	Expr6 -> String .                                   (rule 36)

	'!='           reduce using rule 36
	'%'            reduce using rule 36
	'&&'           reduce using rule 36
	')'            reduce using rule 36
	'*'            reduce using rule 36
	'+'            reduce using rule 36
	','            reduce using rule 36
	'-'            reduce using rule 36
	'/'            reduce using rule 36
	';'            reduce using rule 36
	'<'            reduce using rule 36
	'<='           reduce using rule 36
	'=='           reduce using rule 36
	'>'            reduce using rule 36
	'>='           reduce using rule 36
	']'            reduce using rule 36
	'^'            reduce using rule 36
	'||'           reduce using rule 36


State 33

	Dec -> FDec .                                       (rule 6)

	';'            reduce using rule 6


State 34

	Stmt -> Dec . ';'                                   (rule 17)

	';'            shift, and enter state 93


State 35

	Block -> '{' ListStmt . '}'                         (rule 14)

	'}'            shift, and enter state 92


State 36

	ListStmt -> Stmt . ListStmt                         (rule 16)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'['            shift, and enter state 49
	'bool'         shift, and enter state 7
	'break'        shift, and enter state 50
	'continue'     shift, and enter state 51
	'false'        shift, and enter state 52
	'if'           shift, and enter state 53
	'int'          shift, and enter state 8
	'maybe'        shift, and enter state 54
	'return'       shift, and enter state 55
	'str'          shift, and enter state 9
	'true'         shift, and enter state 56
	'while'        shift, and enter state 57
	'}'            reduce using rule 15
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 58
	L_quoted       shift, and enter state 59

	Ident          goto state 30
	Integer        goto state 31
	String         goto state 32
	FDec           goto state 33
	Dec            goto state 34
	ListStmt       goto state 91
	Stmt           goto state 36
	Type           goto state 37
	Expr6          goto state 38
	Tuple          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 45

State 37

	FDec -> Type . Ident '(' ListArg ')' ':=' Block     (rule 5)
	Dec -> Type . Ident                                 (rule 7)
	Dec -> Type . Ident ':=' Expr                       (rule 8)

	L_Ident        shift, and enter state 2

	Ident          goto state 90

State 38

	Expr6 -> Expr6 . '^' Integer                        (rule 38)
	Expr5 -> Expr6 .                                    (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	']'            reduce using rule 47
	'^'            shift, and enter state 89
	'||'           reduce using rule 47


State 39

	Expr6 -> Tuple .                                    (rule 37)

	'!='           reduce using rule 37
	'%'            reduce using rule 37
	'&&'           reduce using rule 37
	')'            reduce using rule 37
	'*'            reduce using rule 37
	'+'            reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'/'            reduce using rule 37
	';'            reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'=='           reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	']'            reduce using rule 37
	'^'            reduce using rule 37
	'||'           reduce using rule 37


State 40

	Expr4 -> Expr5 .                                    (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	']'            reduce using rule 49
	'||'           reduce using rule 49


State 41

	Expr4 -> Expr4 . MulOp Expr5                        (rule 48)
	Expr3 -> Expr4 .                                    (rule 51)

	'!='           reduce using rule 51
	'%'            shift, and enter state 86
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            shift, and enter state 87
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            shift, and enter state 88
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	']'            reduce using rule 51
	'||'           reduce using rule 51

	MulOp          goto state 85

State 42

	Expr3 -> Expr3 . AddOp Expr4                        (rule 50)
	Expr2 -> Expr3 .                                    (rule 53)

	'!='           reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'+'            shift, and enter state 83
	','            reduce using rule 53
	'-'            shift, and enter state 84
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	']'            reduce using rule 53
	'||'           reduce using rule 53

	AddOp          goto state 82

State 43

	Expr2 -> Expr2 . CompOp Expr3                       (rule 52)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 54)
	Expr1 -> Expr2 .                                    (rule 55)

	'!='           shift, and enter state 75
	'&&'           shift, and enter state 76
	')'            reduce using rule 55
	','            reduce using rule 55
	';'            reduce using rule 55
	'<'            shift, and enter state 77
	'<='           shift, and enter state 78
	'=='           shift, and enter state 79
	'>'            shift, and enter state 80
	'>='           shift, and enter state 81
	']'            reduce using rule 55
	'||'           reduce using rule 55

	CompOp         goto state 74

State 44

	Expr -> Expr1 . '||' Expr                           (rule 56)
	Expr -> Expr1 .                                     (rule 57)

	')'            reduce using rule 57
	','            reduce using rule 57
	';'            reduce using rule 57
	']'            reduce using rule 57
	'||'           shift, and enter state 73


State 45

	Stmt -> Expr . ';'                                  (rule 27)

	';'            shift, and enter state 72


State 46

	Expr5 -> '!' . Expr6                                (rule 46)

	'('            shift, and enter state 47
	'['            shift, and enter state 63
	'false'        shift, and enter state 52
	'maybe'        shift, and enter state 54
	'true'         shift, and enter state 56
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 58
	L_quoted       shift, and enter state 59

	Ident          goto state 61
	Integer        goto state 31
	String         goto state 32
	Expr6          goto state 71
	Tuple          goto state 39

State 47

	Expr6 -> '(' . Expr ')'                             (rule 43)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'['            shift, and enter state 63
	'false'        shift, and enter state 52
	'maybe'        shift, and enter state 54
	'true'         shift, and enter state 56
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 58
	L_quoted       shift, and enter state 59

	Ident          goto state 61
	Integer        goto state 31
	String         goto state 32
	Expr6          goto state 38
	Tuple          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 70

State 48

	Expr5 -> '-' . Expr6                                (rule 45)

	'('            shift, and enter state 47
	'['            shift, and enter state 63
	'false'        shift, and enter state 52
	'maybe'        shift, and enter state 54
	'true'         shift, and enter state 56
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 58
	L_quoted       shift, and enter state 59

	Ident          goto state 61
	Integer        goto state 31
	String         goto state 32
	Expr6          goto state 69
	Tuple          goto state 39

State 49

	Type -> '[' . ListType ']'                          (rule 31)
	Tuple -> '[' . ListExpr ']'                         (rule 44)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'['            shift, and enter state 49
	']'            reduce using rule 58
	'bool'         shift, and enter state 7
	'false'        shift, and enter state 52
	'int'          shift, and enter state 8
	'maybe'        shift, and enter state 54
	'str'          shift, and enter state 9
	'true'         shift, and enter state 56
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 58
	L_quoted       shift, and enter state 59

	Ident          goto state 61
	Integer        goto state 31
	String         goto state 32
	Type           goto state 10
	ListType       goto state 11
	Expr6          goto state 38
	Tuple          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 67
	ListExpr       goto state 68

State 50

	Stmt -> 'break' . ';'                               (rule 25)

	';'            shift, and enter state 66


State 51

	Stmt -> 'continue' . ';'                            (rule 26)

	';'            shift, and enter state 65


State 52

	Expr6 -> 'false' .                                  (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	']'            reduce using rule 40
	'^'            reduce using rule 40
	'||'           reduce using rule 40


State 53

	Stmt -> 'if' . '(' Expr ')' Block                   (rule 22)
	Stmt -> 'if' . '(' Expr ')' Block 'else' Block      (rule 23)

	'('            shift, and enter state 64


State 54

	Expr6 -> 'maybe' .                                  (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	']'            reduce using rule 41
	'^'            reduce using rule 41
	'||'           reduce using rule 41


State 55

	Stmt -> 'return' . Expr ';'                         (rule 21)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'['            shift, and enter state 63
	'false'        shift, and enter state 52
	'maybe'        shift, and enter state 54
	'true'         shift, and enter state 56
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 58
	L_quoted       shift, and enter state 59

	Ident          goto state 61
	Integer        goto state 31
	String         goto state 32
	Expr6          goto state 38
	Tuple          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 62

State 56

	Expr6 -> 'true' .                                   (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	']'            reduce using rule 39
	'^'            reduce using rule 39
	'||'           reduce using rule 39


State 57

	Stmt -> 'while' . '(' Expr ')' Block                (rule 24)

	'('            shift, and enter state 60


State 58

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	']'            reduce using rule 2
	'^'            reduce using rule 2
	'||'           reduce using rule 2


State 59

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	']'            reduce using rule 3
	'^'            reduce using rule 3
	'||'           reduce using rule 3


State 60

	Stmt -> 'while' '(' . Expr ')' Block                (rule 24)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'['            shift, and enter state 63
	'false'        shift, and enter state 52
	'maybe'        shift, and enter state 54
	'true'         shift, and enter state 56
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 58
	L_quoted       shift, and enter state 59

	Ident          goto state 61
	Integer        goto state 31
	String         goto state 32
	Expr6          goto state 38
	Tuple          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 114

State 61

	Expr6 -> Ident .                                    (rule 34)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 42)

	'!='           reduce using rule 34
	'%'            reduce using rule 34
	'&&'           reduce using rule 34
	'('            shift, and enter state 94
	')'            reduce using rule 34
	'*'            reduce using rule 34
	'+'            reduce using rule 34
	','            reduce using rule 34
	'-'            reduce using rule 34
	'/'            reduce using rule 34
	';'            reduce using rule 34
	'<'            reduce using rule 34
	'<='           reduce using rule 34
	'=='           reduce using rule 34
	'>'            reduce using rule 34
	'>='           reduce using rule 34
	']'            reduce using rule 34
	'^'            reduce using rule 34
	'||'           reduce using rule 34


State 62

	Stmt -> 'return' Expr . ';'                         (rule 21)

	';'            shift, and enter state 113


State 63

	Tuple -> '[' . ListExpr ']'                         (rule 44)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'['            shift, and enter state 63
	']'            reduce using rule 58
	'false'        shift, and enter state 52
	'maybe'        shift, and enter state 54
	'true'         shift, and enter state 56
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 58
	L_quoted       shift, and enter state 59

	Ident          goto state 61
	Integer        goto state 31
	String         goto state 32
	Expr6          goto state 38
	Tuple          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 67
	ListExpr       goto state 68

State 64

	Stmt -> 'if' '(' . Expr ')' Block                   (rule 22)
	Stmt -> 'if' '(' . Expr ')' Block 'else' Block      (rule 23)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'['            shift, and enter state 63
	'false'        shift, and enter state 52
	'maybe'        shift, and enter state 54
	'true'         shift, and enter state 56
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 58
	L_quoted       shift, and enter state 59

	Ident          goto state 61
	Integer        goto state 31
	String         goto state 32
	Expr6          goto state 38
	Tuple          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 112

State 65

	Stmt -> 'continue' ';' .                            (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	'['            reduce using rule 26
	'bool'         reduce using rule 26
	'break'        reduce using rule 26
	'continue'     reduce using rule 26
	'false'        reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'maybe'        reduce using rule 26
	'return'       reduce using rule 26
	'str'          reduce using rule 26
	'true'         reduce using rule 26
	'while'        reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 66

	Stmt -> 'break' ';' .                               (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	'['            reduce using rule 25
	'bool'         reduce using rule 25
	'break'        reduce using rule 25
	'continue'     reduce using rule 25
	'false'        reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'maybe'        reduce using rule 25
	'return'       reduce using rule 25
	'str'          reduce using rule 25
	'true'         reduce using rule 25
	'while'        reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 67

	ListExpr -> Expr .                                  (rule 59)
	ListExpr -> Expr . ',' ListExpr                     (rule 60)

	')'            reduce using rule 59
	','            shift, and enter state 111
	']'            reduce using rule 59


State 68

	Tuple -> '[' ListExpr . ']'                         (rule 44)

	']'            shift, and enter state 110


State 69

	Expr6 -> Expr6 . '^' Integer                        (rule 38)
	Expr5 -> '-' Expr6 .                                (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	']'            reduce using rule 45
	'^'            shift, and enter state 89
	'||'           reduce using rule 45


State 70

	Expr6 -> '(' Expr . ')'                             (rule 43)

	')'            shift, and enter state 109


State 71

	Expr6 -> Expr6 . '^' Integer                        (rule 38)
	Expr5 -> '!' Expr6 .                                (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	']'            reduce using rule 46
	'^'            shift, and enter state 89
	'||'           reduce using rule 46


State 72

	Stmt -> Expr ';' .                                  (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	'['            reduce using rule 27
	'bool'         reduce using rule 27
	'break'        reduce using rule 27
	'continue'     reduce using rule 27
	'false'        reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'maybe'        reduce using rule 27
	'return'       reduce using rule 27
	'str'          reduce using rule 27
	'true'         reduce using rule 27
	'while'        reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 73

	Expr -> Expr1 '||' . Expr                           (rule 56)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'['            shift, and enter state 63
	'false'        shift, and enter state 52
	'maybe'        shift, and enter state 54
	'true'         shift, and enter state 56
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 58
	L_quoted       shift, and enter state 59

	Ident          goto state 61
	Integer        goto state 31
	String         goto state 32
	Expr6          goto state 38
	Tuple          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 108

State 74

	Expr2 -> Expr2 CompOp . Expr3                       (rule 52)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'['            shift, and enter state 63
	'false'        shift, and enter state 52
	'maybe'        shift, and enter state 54
	'true'         shift, and enter state 56
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 58
	L_quoted       shift, and enter state 59

	Ident          goto state 61
	Integer        goto state 31
	String         goto state 32
	Expr6          goto state 38
	Tuple          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 107

State 75

	CompOp -> '!=' .                                    (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'['            reduce using rule 71
	'false'        reduce using rule 71
	'maybe'        reduce using rule 71
	'true'         reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 76

	Expr1 -> Expr2 '&&' . Expr1                         (rule 54)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'['            shift, and enter state 63
	'false'        shift, and enter state 52
	'maybe'        shift, and enter state 54
	'true'         shift, and enter state 56
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 58
	L_quoted       shift, and enter state 59

	Ident          goto state 61
	Integer        goto state 31
	String         goto state 32
	Expr6          goto state 38
	Tuple          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 106

State 77

	CompOp -> '<' .                                     (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'['            reduce using rule 66
	'false'        reduce using rule 66
	'maybe'        reduce using rule 66
	'true'         reduce using rule 66
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 78

	CompOp -> '<=' .                                    (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'['            reduce using rule 67
	'false'        reduce using rule 67
	'maybe'        reduce using rule 67
	'true'         reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 79

	CompOp -> '==' .                                    (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'['            reduce using rule 70
	'false'        reduce using rule 70
	'maybe'        reduce using rule 70
	'true'         reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 80

	CompOp -> '>' .                                     (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'['            reduce using rule 68
	'false'        reduce using rule 68
	'maybe'        reduce using rule 68
	'true'         reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 81

	CompOp -> '>=' .                                    (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'['            reduce using rule 69
	'false'        reduce using rule 69
	'maybe'        reduce using rule 69
	'true'         reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 82

	Expr3 -> Expr3 AddOp . Expr4                        (rule 50)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'['            shift, and enter state 63
	'false'        shift, and enter state 52
	'maybe'        shift, and enter state 54
	'true'         shift, and enter state 56
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 58
	L_quoted       shift, and enter state 59

	Ident          goto state 61
	Integer        goto state 31
	String         goto state 32
	Expr6          goto state 38
	Tuple          goto state 39
	Expr5          goto state 40
	Expr4          goto state 105

State 83

	AddOp -> '+' .                                      (rule 61)

	'!'            reduce using rule 61
	'('            reduce using rule 61
	'-'            reduce using rule 61
	'['            reduce using rule 61
	'false'        reduce using rule 61
	'maybe'        reduce using rule 61
	'true'         reduce using rule 61
	L_Ident        reduce using rule 61
	L_integ        reduce using rule 61
	L_quoted       reduce using rule 61


State 84

	AddOp -> '-' .                                      (rule 62)

	'!'            reduce using rule 62
	'('            reduce using rule 62
	'-'            reduce using rule 62
	'['            reduce using rule 62
	'false'        reduce using rule 62
	'maybe'        reduce using rule 62
	'true'         reduce using rule 62
	L_Ident        reduce using rule 62
	L_integ        reduce using rule 62
	L_quoted       reduce using rule 62


State 85

	Expr4 -> Expr4 MulOp . Expr5                        (rule 48)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'['            shift, and enter state 63
	'false'        shift, and enter state 52
	'maybe'        shift, and enter state 54
	'true'         shift, and enter state 56
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 58
	L_quoted       shift, and enter state 59

	Ident          goto state 61
	Integer        goto state 31
	String         goto state 32
	Expr6          goto state 38
	Tuple          goto state 39
	Expr5          goto state 104

State 86

	MulOp -> '%' .                                      (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	'-'            reduce using rule 65
	'['            reduce using rule 65
	'false'        reduce using rule 65
	'maybe'        reduce using rule 65
	'true'         reduce using rule 65
	L_Ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 87

	MulOp -> '*' .                                      (rule 63)

	'!'            reduce using rule 63
	'('            reduce using rule 63
	'-'            reduce using rule 63
	'['            reduce using rule 63
	'false'        reduce using rule 63
	'maybe'        reduce using rule 63
	'true'         reduce using rule 63
	L_Ident        reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63


State 88

	MulOp -> '/' .                                      (rule 64)

	'!'            reduce using rule 64
	'('            reduce using rule 64
	'-'            reduce using rule 64
	'['            reduce using rule 64
	'false'        reduce using rule 64
	'maybe'        reduce using rule 64
	'true'         reduce using rule 64
	L_Ident        reduce using rule 64
	L_integ        reduce using rule 64
	L_quoted       reduce using rule 64


State 89

	Expr6 -> Expr6 '^' . Integer                        (rule 38)

	L_integ        shift, and enter state 58

	Integer        goto state 103

State 90

	FDec -> Type Ident . '(' ListArg ')' ':=' Block     (rule 5)
	Dec -> Type Ident .                                 (rule 7)
	Dec -> Type Ident . ':=' Expr                       (rule 8)

	'('            shift, and enter state 13
	':='           shift, and enter state 102
	';'            reduce using rule 7


State 91

	ListStmt -> Stmt ListStmt .                         (rule 16)

	'}'            reduce using rule 16


State 92

	Block -> '{' ListStmt '}' .                         (rule 14)

	'!'            reduce using rule 14
	'('            reduce using rule 14
	'-'            reduce using rule 14
	';'            reduce using rule 14
	'['            reduce using rule 14
	'bool'         reduce using rule 14
	'break'        reduce using rule 14
	'continue'     reduce using rule 14
	'else'         reduce using rule 14
	'false'        reduce using rule 14
	'if'           reduce using rule 14
	'int'          reduce using rule 14
	'maybe'        reduce using rule 14
	'return'       reduce using rule 14
	'str'          reduce using rule 14
	'true'         reduce using rule 14
	'while'        reduce using rule 14
	'}'            reduce using rule 14
	L_Ident        reduce using rule 14
	L_integ        reduce using rule 14
	L_quoted       reduce using rule 14
	%eof           reduce using rule 14


State 93

	Stmt -> Dec ';' .                                   (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	'['            reduce using rule 17
	'bool'         reduce using rule 17
	'break'        reduce using rule 17
	'continue'     reduce using rule 17
	'false'        reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'maybe'        reduce using rule 17
	'return'       reduce using rule 17
	'str'          reduce using rule 17
	'true'         reduce using rule 17
	'while'        reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17


State 94

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 42)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	')'            reduce using rule 58
	'-'            shift, and enter state 48
	'['            shift, and enter state 63
	'false'        shift, and enter state 52
	'maybe'        shift, and enter state 54
	'true'         shift, and enter state 56
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 58
	L_quoted       shift, and enter state 59

	Ident          goto state 61
	Integer        goto state 31
	String         goto state 32
	Expr6          goto state 38
	Tuple          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 67
	ListExpr       goto state 101

State 95

	Stmt -> Ident '++' . ';'                            (rule 19)

	';'            shift, and enter state 100


State 96

	Stmt -> Ident '--' . ';'                            (rule 20)

	';'            shift, and enter state 99


State 97

	Stmt -> Ident ':=' . Expr ';'                       (rule 18)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'['            shift, and enter state 63
	'false'        shift, and enter state 52
	'maybe'        shift, and enter state 54
	'true'         shift, and enter state 56
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 58
	L_quoted       shift, and enter state 59

	Ident          goto state 61
	Integer        goto state 31
	String         goto state 32
	Expr6          goto state 38
	Tuple          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 98

State 98

	Stmt -> Ident ':=' Expr . ';'                       (rule 18)

	';'            shift, and enter state 120


State 99

	Stmt -> Ident '--' ';' .                            (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	'['            reduce using rule 20
	'bool'         reduce using rule 20
	'break'        reduce using rule 20
	'continue'     reduce using rule 20
	'false'        reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'maybe'        reduce using rule 20
	'return'       reduce using rule 20
	'str'          reduce using rule 20
	'true'         reduce using rule 20
	'while'        reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 100

	Stmt -> Ident '++' ';' .                            (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	'['            reduce using rule 19
	'bool'         reduce using rule 19
	'break'        reduce using rule 19
	'continue'     reduce using rule 19
	'false'        reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'maybe'        reduce using rule 19
	'return'       reduce using rule 19
	'str'          reduce using rule 19
	'true'         reduce using rule 19
	'while'        reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 101

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 42)

	')'            shift, and enter state 119


State 102

	Dec -> Type Ident ':=' . Expr                       (rule 8)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	'-'            shift, and enter state 48
	'['            shift, and enter state 63
	'false'        shift, and enter state 52
	'maybe'        shift, and enter state 54
	'true'         shift, and enter state 56
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 58
	L_quoted       shift, and enter state 59

	Ident          goto state 61
	Integer        goto state 31
	String         goto state 32
	Expr6          goto state 38
	Tuple          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 118

State 103

	Expr6 -> Expr6 '^' Integer .                        (rule 38)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	']'            reduce using rule 38
	'^'            reduce using rule 38
	'||'           reduce using rule 38


State 104

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	']'            reduce using rule 48
	'||'           reduce using rule 48


State 105

	Expr4 -> Expr4 . MulOp Expr5                        (rule 48)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 50)

	'!='           reduce using rule 50
	'%'            shift, and enter state 86
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            shift, and enter state 87
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            shift, and enter state 88
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	']'            reduce using rule 50
	'||'           reduce using rule 50

	MulOp          goto state 85

State 106

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 54)

	')'            reduce using rule 54
	','            reduce using rule 54
	';'            reduce using rule 54
	']'            reduce using rule 54
	'||'           reduce using rule 54


State 107

	Expr3 -> Expr3 . AddOp Expr4                        (rule 50)
	Expr2 -> Expr2 CompOp Expr3 .                       (rule 52)

	'!='           reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'+'            shift, and enter state 83
	','            reduce using rule 52
	'-'            shift, and enter state 84
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	']'            reduce using rule 52
	'||'           reduce using rule 52

	AddOp          goto state 82

State 108

	Expr -> Expr1 '||' Expr .                           (rule 56)

	')'            reduce using rule 56
	','            reduce using rule 56
	';'            reduce using rule 56
	']'            reduce using rule 56


State 109

	Expr6 -> '(' Expr ')' .                             (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	']'            reduce using rule 43
	'^'            reduce using rule 43
	'||'           reduce using rule 43


State 110

	Tuple -> '[' ListExpr ']' .                         (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	']'            reduce using rule 44
	'^'            reduce using rule 44
	'||'           reduce using rule 44


State 111

	ListExpr -> Expr ',' . ListExpr                     (rule 60)

	'!'            shift, and enter state 46
	'('            shift, and enter state 47
	')'            reduce using rule 58
	'-'            shift, and enter state 48
	'['            shift, and enter state 63
	']'            reduce using rule 58
	'false'        shift, and enter state 52
	'maybe'        shift, and enter state 54
	'true'         shift, and enter state 56
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 58
	L_quoted       shift, and enter state 59

	Ident          goto state 61
	Integer        goto state 31
	String         goto state 32
	Expr6          goto state 38
	Tuple          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 67
	ListExpr       goto state 117

State 112

	Stmt -> 'if' '(' Expr . ')' Block                   (rule 22)
	Stmt -> 'if' '(' Expr . ')' Block 'else' Block      (rule 23)

	')'            shift, and enter state 116


State 113

	Stmt -> 'return' Expr ';' .                         (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	'['            reduce using rule 21
	'bool'         reduce using rule 21
	'break'        reduce using rule 21
	'continue'     reduce using rule 21
	'false'        reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'maybe'        reduce using rule 21
	'return'       reduce using rule 21
	'str'          reduce using rule 21
	'true'         reduce using rule 21
	'while'        reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 114

	Stmt -> 'while' '(' Expr . ')' Block                (rule 24)

	')'            shift, and enter state 115


State 115

	Stmt -> 'while' '(' Expr ')' . Block                (rule 24)

	'{'            shift, and enter state 29

	Block          goto state 122

State 116

	Stmt -> 'if' '(' Expr ')' . Block                   (rule 22)
	Stmt -> 'if' '(' Expr ')' . Block 'else' Block      (rule 23)

	'{'            shift, and enter state 29

	Block          goto state 121

State 117

	ListExpr -> Expr ',' ListExpr .                     (rule 60)

	')'            reduce using rule 60
	']'            reduce using rule 60


State 118

	Dec -> Type Ident ':=' Expr .                       (rule 8)

	';'            reduce using rule 8


State 119

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	']'            reduce using rule 42
	'^'            reduce using rule 42
	'||'           reduce using rule 42


State 120

	Stmt -> Ident ':=' Expr ';' .                       (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	'['            reduce using rule 18
	'bool'         reduce using rule 18
	'break'        reduce using rule 18
	'continue'     reduce using rule 18
	'false'        reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'maybe'        reduce using rule 18
	'return'       reduce using rule 18
	'str'          reduce using rule 18
	'true'         reduce using rule 18
	'while'        reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 121

	Stmt -> 'if' '(' Expr ')' Block .                   (rule 22)
	Stmt -> 'if' '(' Expr ')' Block . 'else' Block      (rule 23)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	'['            reduce using rule 22
	'bool'         reduce using rule 22
	'break'        reduce using rule 22
	'continue'     reduce using rule 22
	'else'         shift, and enter state 123
	'false'        reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'maybe'        reduce using rule 22
	'return'       reduce using rule 22
	'str'          reduce using rule 22
	'true'         reduce using rule 22
	'while'        reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 122

	Stmt -> 'while' '(' Expr ')' Block .                (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	'['            reduce using rule 24
	'bool'         reduce using rule 24
	'break'        reduce using rule 24
	'continue'     reduce using rule 24
	'false'        reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'maybe'        reduce using rule 24
	'return'       reduce using rule 24
	'str'          reduce using rule 24
	'true'         reduce using rule 24
	'while'        reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 123

	Stmt -> 'if' '(' Expr ')' Block 'else' . Block      (rule 23)

	'{'            shift, and enter state 29

	Block          goto state 124

State 124

	Stmt -> 'if' '(' Expr ')' Block 'else' Block .      (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	'['            reduce using rule 23
	'bool'         reduce using rule 23
	'break'        reduce using rule 23
	'continue'     reduce using rule 23
	'false'        reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'maybe'        reduce using rule 23
	'return'       reduce using rule 23
	'str'          reduce using rule 23
	'true'         reduce using rule 23
	'while'        reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 72
Number of terminals: 43
Number of non-terminals: 26
Number of states: 125
